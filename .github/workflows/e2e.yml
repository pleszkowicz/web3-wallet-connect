name: E2E Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    name: E2E â†’ deploy, build & test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NEXT_PUBLIC_ALCHEMY_API_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_API_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout SC
        uses: actions/checkout@v4
        with:
          repository: pleszkowicz/hardhat-nft-marketplace
          path: smart-contract

      - name: Setup Node.js 20.x & cache npm + pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20.6.1
          # cache SC npm-cache and FE pnpm-cache in one go
          cache: 'npm'
          cache-dependency-path: |
            smart-contract/package-lock.json
            pnpm-lock.yaml

      - name: Setup pnpm CLI
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Restore Next.js build cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('pnpm-lock.yaml','**/*.{js,jsx,ts,tsx}') }}

      - name: Install dependencies in parallel
        run: |
          (pnpm install) &
          (cd smart-contract && npm ci) &
          wait

      - name: Start Hardhat node & deploy
        run: |
          cd smart-contract
          npx hardhat node --hostname 0.0.0.0 --port 8545 &
          cd ..
          npx wait-on http://localhost:8545
          cd smart-contract
          npm run deploy:local > deploy-output.txt
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}

      - name: Wire up FE with deployed contract
        run: |
          ADDRESS=$(grep -oE '0x[a-fA-F0-9]{40}' deploy-output.txt | head -1)
          mkdir -p lib/abi
          cp smart-contract/artifacts/contracts/*/*.json lib/abi/
          echo "{\"NftMarketplace\":\"$ADDRESS\"}" \
            > lib/abi/contract-address.json
          echo "NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS=$ADDRESS" \
            >> $GITHUB_ENV

      - name: Build frontend
        run: pnpm run build

      - name: Set Playwright browsers cache dir
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/ms-playwright-chrome" >> $GITHUB_ENV

      - name: Cache Playwright Chrome
        uses: actions/cache@v4
        with:
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: ${{ runner.os }}-playwright-chrome-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-chrome-

      - name: Install Playwright Chrome
        run: pnpm exec playwright install

      - name: Run Playwright tests
        run: xvfb-run --auto-servernum -- pnpm exec playwright test --headed --timeout 90000
        env:
          CI: true
          NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS: ${{ env.NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS }}

      - name: Upload Playwright report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 30
