name: To delete

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0-jammy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.6.1

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 10.8.0

      - name: Install dependencies
        run: pnpm install

            - name: Checkout hardhat-nft-marketplace
        uses: actions/checkout@v4
        with:
          repository: pleszkowicz/hardhat-nft-marketplace
          path: smart-contract

      - name: Install contracts deps
        run: |
          cd smart-contract
          npm ci

      - name: Start Hardhat Node & Deploy to local
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SEPOLIA_RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}
        run: |
          cd smart-contract

          # 1) Start Hardhat Node w tle i loguj do pliku
          nohup npx hardhat node --hostname 0.0.0.0 --port 8545 > hardhat.log 2>&1 &

          # 2) Czekaj do 60s, aż localhost:8545 odpowie
          npx wait-on http://127.0.0.1:8545 --timeout 60000

          # 3) (opcjonalnie) szybki podgląd loga, aby sprawdzić, czy node się poprawnie wystartował
          echo "=== Hardhat log (ostatnie 20 linii) ==="
          tail -n 20 hardhat.log || echo "(brak logów)"

          # 4) Wykonaj deploy do lokalnego RPC
          npm run deploy:local > deploy-output.txt

          # 5) Wyciągnij adres z deploy-output i zapisz do GITHUB_ENV
          ADDRESS=$(grep -oE '0x[a-fA-F0-9]{40}' deploy-output.txt | head -1)
          echo "NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS=$ADDRESS" >> $GITHUB_ENV

          # 6) (opcjonalnie) skopiuj ABI do folderu, z którego później build frontendu może go odczytać
          mkdir -p ../lib/abi
          cp artifacts/contracts/*/*.json ../lib/abi/

          # 7) Pokaż zawartość deploy-output dla pewności
          echo "=== deploy-output.txt ==="
          cat deploy-output.txt

      - name: Show deploy-output.txt
        run: cat smart-contract/deploy-output.txt

      - name: Extract contract address
        run: |
          mkdir -p lib/abi
          ADDRESS=$(grep -oE '0x[a-fA-F0-9]{40}' smart-contract/deploy-output.txt | head -1)
          echo "{\"NftMarketplace\":\"$ADDRESS\"}" > lib/abi/contract-address.json
          echo "NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS=$ADDRESS" >> $GITHUB_ENV

      - name: Copy ABI to frontend
        run: |
          mkdir -p lib/abi
          cp smart-contract/artifacts/contracts/*/*.json lib/abi/

      - name: Create .env.local with dynamic address
        run: |
          echo "NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS=$ADDRESS" > .env.local


      - name: Test
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS: ${{ env.NEXT_PUBLIC_CUSTOM_NFT_MARKETPLACE_SMART_CONTRACT_ADDRESS }}
          NEXT_PUBLIC_ALCHEMY_API_KEY: ${{ secrets.NEXT_PUBLIC_ALCHEMY_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          xvfb-run --auto-servernum pnpm exec playwright test --headed --timeout 60000
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results
